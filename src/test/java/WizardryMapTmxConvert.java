
import andius.Andius;
import andius.objects.Icons;
import andius.objects.Monster;
import com.badlogic.gdx.ApplicationListener;
import com.badlogic.gdx.backends.lwjgl.LwjglApplication;
import java.awt.Dimension;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import jakarta.xml.bind.DatatypeConverter;
import org.apache.commons.io.FileUtils;

public class WizardryMapTmxConvert implements ApplicationListener {

    public static final String
    public static final String
    public static final String
    public static final String
    public static final String
    public static final String
    public static final String
    public static final String
    public static final String
    public static final String

    public static final String[] LEVELS = new String[]{L1, L2, L3, L4, L5, L6, L7, L8, L9, L10};

    private final List<Message> messages = new ArrayList<>();

    public enum Type {
        FLOOR(124, ' '),
        DOOR(271, 'D'),
        DARKNESS(62, '~'),
        SPELL_BLOCK(690, 'S'),
        STAIRS_UP(51, '^'),
        STAIRS_DOWN(50, 'v'),
        ELEVATOR(194, 'E'),
        PITFALL(683, 'P'),
        CHUTE(575, 'C'),
        SPINNER(688, 'S'),
        MESSAGE(596, 'M'),
        GUARDIAN(192, 'G'),
        MONSTER(59, 'X'),
        SPECIAL(59, 'Q'),
        TELEPORTER(689, 'T'),
        ROCK(387, 'R'),
        WALL(322, '+'),
        NORTH_WALL(282, '+'),
        SOUTH_WALL(242, '+'),
        HIDDEN_NORTH(327, '@'),
        HIDDEN_SOUTH(327, '@'),
        HIDDEN_WEST(327, '@'),
        HIDDEN_EAST(327, '@');
        private final int id;
        private final char dis;

        private Type(int id, char dis) {
            this.id = id;
            this.dis = dis;
        }

        public int id() {
            return this.id;
        }

        public char display() {
            return this.dis;
        }
    };

    public static void main(String[] args) throws Exception {
        new LwjglApplication(new WizardryMapTmxConvert());
    }

    @Override
    public void create() {

        try {

            Andius a = new Andius();
            a.create();

            for (String hx : MSGS) {
                messages.add(new Message(DatatypeConverter.parseHexBinary(hx)));
            }

            for (int i = 0; i < 1; i++) {
                MazeLevel level = new MazeLevel(DatatypeConverter.parseHexBinary(LEVELS[i]), i + 1);
                System.out.println("Level " + i);
                System.out.println(level);
                //Formatter fmtter = new Formatter(3 * 20, 3 * 20, level);
                //FileUtils.writeStringToFile(new File("target/WizLevel" + level.level + ".tmx"), fmtter.toString());
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        System.out.println("DONE");
    }

    @Override
    public void resize(int width, int height) {
    }

    @Override
    public void render() {
    }

    @Override
    public void pause() {
    }

    @Override
    public void resume() {
    }

    @Override
    public void dispose() {
    }

    class MazeLevel {

        public int level;
        byte[] buffer;
        MazeCell[][] cells = new MazeCell[20][20];

        public MazeLevel(byte[] buffer, int level) {
            this.level = level;
            this.buffer = buffer;

            for (int row = 0; row < 20; row++) {
                for (int column = 0; column < 20; column++) {
                    cells[row][column] = getLocation(row, column);
                }
            }
        }

        private MazeCell getLocation(int row, int column) {
            MazeAddress address = new MazeAddress(level, row, column);
            MazeCell cell = new MazeCell(address);

            // doors and walls
            int offset = column * 6 + row / 4; // 6 bytes/column

            int value = intValue(buffer[offset]);
            value >>>= (row % 4) * 2;
            cell.westWall = ((value & 1) == 1);
            value >>>= 1;
            cell.westDoor = ((value & 1) == 1);

            value = intValue(buffer[offset + 120]);
            value >>>= (row % 4) * 2;
            cell.southWall = ((value & 1) == 1);
            value >>>= 1;
            cell.southDoor = ((value & 1) == 1);

            value = intValue(buffer[offset + 240]);
            value >>>= (row % 4) * 2;
            cell.eastWall = ((value & 1) == 1);
            value >>>= 1;
            cell.eastDoor = ((value & 1) == 1);

            value = intValue(buffer[offset + 360]);
            value >>>= (row % 4) * 2;
            cell.northWall = ((value & 1) == 1);
            value >>>= 1;
            cell.northDoor = ((value & 1) == 1);

            // monster table
            offset = column * 4 + row / 8; // 4 bytes/column, 1 bit/row
            value = intValue(buffer[offset + 480]);
            value >>>= row % 8;
            cell.monsterLair = ((value & 1) == 1);

            // stairs, pits, darkness etc.
            offset = column * 10 + row / 2; // 10 bytes/column, 4 bits/row
            value = intValue(buffer[offset + 560]);
            int b = (row % 2 == 0) ? value % 16 : value / 16;
            int c = intValue(buffer[760 + b / 2]);
            int d = (b % 2 == 0) ? c % 16 : c / 16;

            switch (d) {
                case 1:
                    cell.stairs = true;
                    cell.addressTo = getAddress(b);
                    break;
                case 2:
                    cell.pit = true;
                    break;
                case 3:
                    cell.chute = true;
                    cell.addressTo = getAddress(b);
                    break;
                case 4:
                    cell.spinner = true;
                    break;
                case 5:
                    cell.darkness = true;
                    break;
                case 6: {
                    if (level == 9) {
                        cell.rock = true;
                    } else {
                        cell.teleport = true;
                        cell.addressTo = getAddress(b);
                    }
                    break;
                }
                case 8:
                    cell.elevator = true;
                    cell.elevatorTo = intValue(buffer[800 + b * 2], buffer[801 + b * 2]);
                    cell.elevatorFrom = intValue(buffer[832 + b * 2], buffer[833 + b * 2]);
                    cell.addressTo = getAddress(row, column);
                    break;
                case 9:
                    cell.rock = true;
                    break;
                case 10:
                    cell.spellsBlocked = true;
                    break;
                case 11:
                    int messageNum = intValue(buffer[800 + b * 2], buffer[801 + b * 2]);
                    for (Message m : messages) {
                        if (m.match(messageNum)) {
                            cell.message = m;
                            break;
                        }
                    }
                    if (cell.message == null) {
                        System.out.println("message not found : " + messageNum);
                    }
                    cell.messageType = intValue(buffer[832 + b * 2], buffer[833 + b * 2]);

                    int itemID = -1;

                    if (cell.messageType == 2) // obtain Item
                    {
                        itemID = intValue(buffer[768 + b * 2], buffer[769 + b * 2]);
                        cell.itemObtained = itemID;
                    }
                    if (cell.messageType == 5) // requires Item
                    {
                        itemID = intValue(buffer[768 + b * 2], buffer[769 + b * 2]);
                        cell.itemRequired = itemID;
                    }
                    if (cell.messageType == 4) {
                        value = intValue(buffer[768 + b * 2], buffer[769 + b * 2]);
                        if (value <= 100) {
                            cell.monsterID = value;
                        } else {
                            int val = (value - 64536) * -1;
                            cell.itemObtained = val; // check this
                        }
                    }
                    break;
                case 12:
                    cell.monsterID = intValue(buffer[832 + b * 2], buffer[833 + b * 2]);
                    break;
                default:
                    cell.unknown = d;
                    break;
            }

            return cell;
        }

        private MazeAddress getAddress(int b) {
            return new MazeAddress(
                    intValue(buffer[768 + b * 2], buffer[769 + b * 2]),
                    intValue(buffer[800 + b * 2], buffer[801 + b * 2]),
                    intValue(buffer[832 + b * 2], buffer[833 + b * 2]));
        }

        private MazeAddress getAddress(int x, int y) {
            return new MazeAddress(0, x, y);
        }

        @Override
        public String toString() {
            char[][] map = new char[60][60];
            for (int y = 0; y < 20; y++) {
                for (int x = 0; x < 20; x++) {
                    MazeCell cell = cells[x][y];
                    cell.draw();
                    for (int j = 0; j < 3; j++) {
                        for (int k = 0; k < 3; k++) {
                            Type t = cell.block[j][k];
                            map[x * 3 + j][y * 3 + k] = t != null ? t.display() : ' ';
                        }
                    }
                }
            }
            String ret = "";
            for (int x = 59; x >= 0; x--) {
                for (int y = 0; y < 60; y++) {
                    ret += map[x][y];
                }
                ret += "\n";
            }
            return ret;
        }

    }

    class MazeAddress {

        public final int level;
        public final int row;
        public final int column;

        public MazeAddress(int level, int row, int column) {
            this.level = level;
            this.row = row;
            this.column = column;
        }

        @Override
        public String toString() {
            return level + "/" + row + "/" + column;
        }
    }

    class MazeCell {

        Dimension cellSize = new Dimension(22, 22); // size in pixels

        boolean northWall;
        boolean southWall;
        boolean eastWall;
        boolean westWall;

        boolean northDoor;
        boolean southDoor;
        boolean eastDoor;
        boolean westDoor;

        boolean darkness;

        boolean stairs;
        boolean pit;
        boolean spinner;
        boolean chute;
        boolean elevator;
        boolean monsterLair;
        boolean rock;
        boolean teleport;
        boolean spellsBlocked;

        int elevatorFrom;
        int elevatorTo;

        int messageType;
        int monsterID = -1;
        int itemID;

        int unknown;

        MazeAddress address;
        MazeAddress addressTo; // if teleport/stairs/chute

        public Message message;
        public int itemRequired;
        public int itemObtained;

        Type[][] block = new Type[3][3];

        public MazeCell(MazeAddress address) {
            this.address = address;
        }

        public void draw() {

            if (darkness) {
                fill(Type.DARKNESS);
            }

            if (spellsBlocked) {
                fill(Type.SPELL_BLOCK);
            }

            if (rock) {
                fill(Type.ROCK);
            }

            /*
            Walls
             */
            if (northWall) {
                this.block[2][0] = Type.NORTH_WALL;
                this.block[2][1] = Type.NORTH_WALL;
                this.block[2][2] = Type.NORTH_WALL;
            }

            if (southWall) {
                this.block[0][0] = Type.SOUTH_WALL;
                this.block[0][1] = Type.SOUTH_WALL;
                this.block[0][2] = Type.SOUTH_WALL;
            }

            if (eastWall) {
                this.block[0][2] = Type.WALL;
                this.block[1][2] = Type.WALL;
                this.block[2][2] = Type.WALL;
            }

            if (westWall) {
                this.block[0][0] = Type.WALL;
                this.block[1][0] = Type.WALL;
                this.block[2][0] = Type.WALL;
            }

            /*
            Doors
             */
            if (northDoor) {
                this.block[2][0] = Type.WALL;
                this.block[2][1] = Type.DOOR;
                this.block[2][2] = Type.WALL;
            }

            if (eastDoor) {
                this.block[0][2] = Type.WALL;
                this.block[1][2] = Type.DOOR;
                this.block[2][2] = Type.WALL;
            }

            if (westDoor) {
                this.block[0][0] = Type.WALL;
                this.block[1][0] = Type.DOOR;
                this.block[2][0] = Type.WALL;
            }

            if (southDoor) {
                this.block[0][0] = Type.WALL;
                this.block[0][1] = Type.DOOR;
                this.block[0][2] = Type.WALL;
            }

            /*
            hidden doors
             */
            if (northDoor && northWall) {
                this.block[2][0] = Type.WALL;
                this.block[2][1] = Type.HIDDEN_NORTH;
                this.block[2][2] = Type.WALL;
            }

            if (eastDoor && eastWall) {
                this.block[0][2] = Type.WALL;
                this.block[1][2] = Type.HIDDEN_EAST;
                this.block[2][2] = Type.WALL;
            }

            if (westDoor && westWall) {
                this.block[0][0] = Type.WALL;
                this.block[1][0] = Type.HIDDEN_WEST;
                this.block[2][0] = Type.WALL;
            }

            if (southDoor && southWall) {
                this.block[0][0] = Type.WALL;
                this.block[0][1] = Type.HIDDEN_SOUTH;
                this.block[0][2] = Type.WALL;
            }

            if (monsterLair) {
                this.block[1][1] = Type.GUARDIAN;
            }

            if (monsterID >= 0) {
                this.block[1][1] = Type.MONSTER;
            }

            if (stairs) {
                if (address.level < addressTo.level) {
                    this.block[1][1] = Type.STAIRS_DOWN;
                } else {
                    this.block[1][1] = Type.STAIRS_UP;
                }
            }
            if (message != null) {
                this.block[1][1] = Type.MESSAGE;
            }
            if (pit) {
                this.block[1][1] = Type.PITFALL;
            }
            if (chute) {
                this.block[1][1] = Type.CHUTE;
            }
            if (spinner) {
                this.block[1][1] = Type.SPINNER;
            }
            if (teleport) {
                this.block[1][1] = Type.TELEPORTER;
            }
            if (elevator) {
                this.block[1][1] = Type.ELEVATOR;
            }
            if (unknown != 0) {
                this.block[1][1] = Type.SPECIAL;
            }
        }

        private void fill(Type id) {
            for (int x = 0; x < 3; x++) {
                for (int y = 0; y < 3; y++) {
                    block[x][y] = id;
                }
            }
        }

    }

    private static int nextMsgId = 0;

    class Message {

        protected String message;
        private final int id;
        private int totalLines;
        List<String> lines = new ArrayList<>();
        byte[] buffer;

        public Message(byte[] buffer) {
            this.id = nextMsgId;
            this.buffer = buffer;
            int recordLength = 42;
            StringBuilder text = new StringBuilder();

            for (int ptr = 0; ptr < buffer.length; ptr += recordLength) {
                nextMsgId++;
                totalLines++;
                String line = getLine(ptr).replace("\"", "");
                text.append(line + " ");
                lines.add(line);
            }
            text.deleteCharAt(text.length() - 1);
            message = text.toString().toLowerCase();
        }

        public boolean match(int messageNum) {
            if (id == messageNum) {
                return true;
            }

            // this code is to allow for a bug in scenario #1
            if (messageNum > id && messageNum < (id + totalLines)) {
                return true;
            }

            return false;
        }

        public String getText() {
            return message;
        }

        protected String getLine(int offset) {
            int length = intValue(buffer[offset]);
            return getString(buffer, offset + 1, length);
        }

    }

    public static final String M1 = "1F41204C41524745205349474E204F4E205448452057414C4C2052454144533A00000B4C454154480000212020202A2A2A20434F525249444F52204F5554204F46204C494D495453202A2A2AD7B20280CCCA00001820202020202020202020202020205455524E204241434B21A40CC680BA01A6013AD7B20280CCCA0100";
    public static final String
    public static final String
    public static final String
    public static final String
    public static final String M6 = "2041532054484520504152545920454E54455253205448495320524F4F4D2C20413AD7B20280CCCA00001E42524F4E5A452D434F4C4F52454420534D4F4B452046494C4C532049542EA6013AD7B20280CCCA00002653554444454E4C592C20544845205041525459204645454C5320434F4D50454C4C454420544FCA0000214C454156452054484520524F4F4D205448452057415920544845592043414D452ED7B20280CCCA0100";
    public static final String M7 = "2041532054484520504152545920454E54455253205448495320524F4F4D2C20413AD7B20280CCCA00002653494C5645525920464F472044455343454E44532046524F4D20544845204345494C494E472ECA00002353554444454E4C592C20494D41474553204F46205445525249424C452044454D4F4E5345204FCA0000225345454D20544F20464F524D20414C4C2041524F554E44205448454D2E202054484520464C45CA0000265041525459204D454D4245525320464C45452054484520524F4F4D20494E20544552524F522ECA0100";
    public static final String M8 = "204120504C4143415244204E454152205448452047524F554E442052454144533A4D20494E80CCCA00001522412044554E47454F4E2753204441524B2E2E2E22CCCA39A40CC680BA01A6013AD7B20280CCCA0100";
    public static final String M9 = "204120504C4143415244204E454152205448452047524F554E442052454144533A3AD7B20280CCCA000016225748454E2049542753204E4F54204C49542E2E2E22CA39A40CC680BA01A6013AD7B20280CCCA0100";
    public static final String M10 = "204120504C4143415244204E454152205448452047524F554E442052454144533A3AD7B20280CCCA000019225741544348204F55542C204F5220594F55274C4C2E2E2E220CC680BA01A6013AD7B20280CCCA0100";
    public static final String M11 = "215448455245204953204120535441545545545445204F4620412042454152204F4ED7B20280CCCA0000264120534D414C4C20504544455354414C2E2020424548494E442049542049532041205349474ECA00002452454144494E472C20224927564520474F542041204D494C4C494F4E204F462027454D2280CCCA0100";
    public static final String
    public static final String M13 = "1F54484520464C4F4F52204841532041204D4F534149432052454144494E473A425920410280CCCA00000C225455524E204C4546542E22414C20415552412E80CCCA39A40CC680BA01A6013AD7B20280CCCA0100";
    public static final String M14 = "1F54484520464C4F4F52204841532041204D4F534149432052454144494E473A013AD7B20280CCCA00000D225455524E2052494748542E2200CC3AC63AB20280CCCA39A40CC680BA01A6013AD7B20280CCCA0100";
    public static final String M15 = "1F54484520464C4F4F52204841532041204D4F534149432052454144494E473A013AD7B20280CCCA00000E225455524E2041524F554E442E22CC3AC63AB20280CCCA39A40CC680BA01A6013AD7B20280CCCA0100";
    public static final String M16 = "1941205349474E204F4E2054484520444F4F522052454144533A0CC680BA01A6013AD7B20280CCCA0000262A2A2A2054455354494E472047524F554E445320434F4E54524F4C2043454E544552202A2A2ACA0000232020544849532041524541204953205354524943544C59204F46462D4C494D4954532E0280CCCA00001C20202020202020203C3C3C20444F204E4F5420454E544552203E3E3EBA01A6013AD7B20280CCCA0100";
    public static final String
    public static final String M18 = "1941205349474E204F4E2054484520444F4F522052454144533A0CC680BA01A6013AD7B20280CCCA000016225452454153555245205245504F5349544F52592E22CA39A40CC680BA01A6013AD7B20280CCCA0100";
    public static final String M19 = "1941205349474E204F4E2054484520444F4F522052454144533A0CC680BA01A6013AD7B20280CCCA00001B224D4F4E5354455220414C4C4F434154494F4E2043454E5445522280BA01A6013AD7B20280CCCA0100";
    public static final String M20 = "1941205349474E204F4E2054484520444F4F522052454144533A0CC680BA01A6013AD7B20280CCCA00001D202020202020202020202020205052495641544520454C455641544F5201A6013AD7B20280CCCA00001F202020202020202020415554484F52495A4544205553455253204F4E4C5921013AD7B20280CCCA0100";
    public static final String
    public static final String
    public static final String
    public static final String M24 = "1F202041204C4152474520534C4944494E472057414C4C2057495448205448450000000000000000000022494D414745204F46204120424541522055504F4E20495420424C4F434B5320544845000000000000002350415448204F46205448452050415254592E20205448452057414C4C20534C494445530000000000001F544F5741524453205448452050415254592C20464F5243494E47205448454D00000000000000000000114F5554534944452054484520524F4F4D2E000000000000000000000000000000000000000000000100";
    public static final String M25 = "242020204E4F424F445920494E205448452050415254592043414E20425245414B2054484500002000000A444F4F5220444F574E2E00000000000008012000000000000000280028000000000000002000480100";
    public static final String
    public static final String M27 = "254F4E452047524F5550204F4620475541524449414E5320594520484156452042454154454E0000000022425554204D414E59204D4F52452041574149542059452120205455524E204241434B000000000000001D5748494C4520594F55205354494C4C2043414E2C204D4F5254414C5321000000000000000000000100";
    public static final String M28 = "1941205349474E204F4E205448452057414C4C2052454144533A00000000000000000000000000000000222020224C414952204F4620544845204556494C2057495A41524420574552444E4122450000000000001C20202020202020205448452057495A415244204953202A2A494E2A2A5245204953204E4F0000000100";
    public static final String
    public static final String M30 = "1D4954532047455454494E47205741524D2041524F554E44204845524521000000000000000000000100";
    public static final String M31 = "174954532047455454494E47205245414C4C5920484F5421000000000000000000000000000000000100";
    public static final String M32 = "1B49545320414C4D4F535420544F4F20484F5420544F2042454152210000000000000000000000000100";

    public static final String[] MSGS = new String[]{M1, M2, M3, M4, M5, M6, M7, M8, M9, M10, M11, M12, M13, M14, M15, M16, M16, M17, M18, M19, M20, M21, M22, M23, M24, M25, M26, M27, M28, M29, M30, M31, M32};

    private static int intValue(byte b1) {
        return b1 & 0xFF;
    }

    private static int intValue(byte b1, byte b2) {
        return intValue(b1) + intValue(b2) * 256;
    }

    private static String getString(byte[] buffer, int offset, int length) {
        StringBuffer text = new StringBuffer();

        for (int i = offset; i < offset + length; i++) {
            int c = intValue(buffer[i]);
            if (c > 127) {
                if (c < 160) {
                    c -= 64;
                } else {
                    c -= 128;
                }
            }
            if (c == 13) {
                text.append("\n");
            } else if (c < 32) // non-printable
            {
                text.append(".");
            } else // standard ascii
            {
                text.append((char) c);
            }
        }
        return text.toString();
    }

    public static class Formatter {

        int level;
        int mapWidth;
        int mapHeight;
        Type[][] ids;
        int[][] creatureIcons;
        int objectId = 0;
        Random rand = new Random();
        StringBuilder monsters = new StringBuilder();
        StringBuilder portals = new StringBuilder();
        StringBuilder messageProps = new StringBuilder();

        public Formatter(int mapWidth, int mapHeight, MazeLevel level) {
            this.mapWidth = mapWidth;
            this.mapHeight = mapHeight;
            this.level = level.level;
            this.ids = new Type[mapHeight][mapWidth];
            this.creatureIcons = new int[mapHeight][mapWidth];

            for (int r = 0; r < 20; r++) {
                for (int c = 0; c < 20; c++) {
                    MazeCell cell = level.cells[r][c];
                    cell.draw();
                    for (int x = 0; x < 3; x++) {
                        for (int y = 0; y < 3; y++) {
                            this.ids[r * 3 + x][c * 3 + y] = cell.block[x][y];
                            if (x == 1 && y == 1) {
                                portals.append(portal(cell,
                                        this.ids[r * 3 + x][c * 3 + y],
                                        (c) * (3 * 48) + (1 * 48),
                                        (20 - r) * (3 * 48) - (2 * 48)
                                ));
                                messageProps.append(messages(cell,
                                        (c) * (3 * 48) + (1 * 48),
                                        (20 - r) * (3 * 48) - (2 * 48)
                                ));
                                monsters.append(monster(cell,
                                        (c) * (3 * 48) + (1 * 48),
                                        (20 - r) * (3 * 48) - (2 * 48),
                                        r * 3 + x, c * 3 + y
                                ));
                            }
                        }
                    }
                }
            }

            for (int r = 19; r >= 0; r--) {
                for (int c = 0; c < 20; c++) {
                    MazeCell cell = level.cells[r][c];
                    if (cell.block[2][1] == Type.HIDDEN_NORTH || cell.block[2][1] == Type.DOOR) {
                        int j = r + 1 > 19 ? 0 : r + 1;
                        int k = c;
                        MazeCell adj = level.cells[j][k];
                        if (adj.block[0][1] == Type.SOUTH_WALL || adj.block[0][1] == Type.WALL) {
                            hidden((c) * (3 * 48) + (1 * 48), (20 - r) * (3 * 48) - (3 * 48), k * 3 + 1, (19 - j) * 3 + 1);
                        }
                    }
                    if (cell.block[0][1] == Type.HIDDEN_SOUTH || cell.block[0][1] == Type.DOOR) {
                        int j = r - 1 < 0 ? 19 : r - 1;
                        int k = c;
                        MazeCell adj = level.cells[j][k];
                        if (adj.block[2][1] == Type.NORTH_WALL || adj.block[2][1] == Type.WALL) {
                            hidden((c) * (3 * 48) + (1 * 48), (20 - r) * (3 * 48) - (1 * 48), k * 3 + 1, (19 - j) * 3 + 1);
                        }
                    }
                    if (cell.block[1][0] == Type.HIDDEN_WEST || cell.block[1][0] == Type.DOOR) {
                        int j = r;
                        int k = c - 1 < 0 ? 19 : c - 1;
                        MazeCell adj = level.cells[j][k];
                        if (adj.block[1][2] == Type.WALL) {
                            hidden((c) * (3 * 48) + (0 * 48), (20 - r) * (3 * 48) - (2 * 48), k * 3 + 1, (19 - j) * 3 + 1);
                        }
                    }
                    if (cell.block[1][2] == Type.HIDDEN_EAST || cell.block[1][2] == Type.DOOR) {
                        int j = r;
                        int k = c + 1 > 19 ? 0 : c + 1;
                        MazeCell adj = level.cells[j][k];
                        if (adj.block[1][0] == Type.WALL) {
                            hidden((c) * (3 * 48) + (2 * 48), (20 - r) * (3 * 48) - (2 * 48), k * 3 + 1, (19 - j) * 3 + 1);
                        }
                    }

                }
            }

        }

        private String monster(MazeCell cell, int x, int y, int r, int c) {
            if ((cell.monsterID >= 0 && cell.message == null) || cell.monsterLair) {

                return "";
            } else {
                return "";
            }
        }

        private String portal(MazeCell cell, Type type, int x, int y) {
            if (cell.teleport || cell.chute || cell.stairs || cell.elevator) {
                return String.format("<object id=\"%d\" name=\"%s\" x=\"%d\" y=\"%d\" width=\"48\" height=\"48\">\n"
                        + "   <properties>\n"
                        + "    <property name=\"dx\" value=\"%d\"/>\n"
                        + "    <property name=\"dy\" value=\"%d\"/>\n"
                        + "   </properties>\n"
                        + "  </object>",
                        ++objectId,
                        cell.elevator
                                ? "elevator levels " + cell.elevatorFrom + " to " + cell.elevatorTo
                                : type.toString().toLowerCase() + " to level " + cell.addressTo.level,
                        x, y, cell.addressTo.column * 3 + 1, (19 - cell.addressTo.row) * 3 + 1);

            } else {
                return "";
            }
        }

        private void hidden(int r, int c, int dx, int dy) {
            portals.append(String.format("<object id=\"%d\" name=\"%s\" x=\"%d\" y=\"%d\" width=\"48\" height=\"48\">\n"
                    + "   <properties>\n"
                    + "    <property name=\"dx\" value=\"%d\"/>\n"
                    + "    <property name=\"dy\" value=\"%d\"/>\n"
                    + "   </properties>\n"
                    + "  </object>",
                    ++objectId, "hidden door", r, c, dx, dy));
        }

        private String messages(MazeCell cell, int x, int y) {
            if (cell.message != null) {
                return String.format("<object id=\"%d\" name=\"%d\" type=\"%s\" x=\"%d\" y=\"%d\" width=\"48\" height=\"48\">\n"
                        + "   <properties>\n"
                        + "    <property name=\"messageType\" value=\"%d\"/>\n"
                        + "    <property name=\"monsterId\" value=\"%d\"/>\n"
                        + "    <property name=\"itemObtained\" value=\"%d\"/>\n"
                        + "    <property name=\"itemRequired\" value=\"%d\"/>\n"
                        + "   </properties>\n"
                        + "  </object>",
                        ++objectId,
                        cell.message.id,
                        cell.message.getText(),
                        x, y,
                        cell.messageType,
                        cell.monsterID,
                        cell.itemObtained,
                        cell.itemRequired);

            } else {
                return "";
            }
        }

        private int getWallId(Type t) {
            if (t == Type.SOUTH_WALL) {
                return getRandomBetween(302, 307);
            } else if (t == Type.NORTH_WALL) {
                return getRandomBetween(342, 347);
            } else if (t == Type.ROCK) {
                return getRandomBetween(382, 384);
            } else {
                return getRandomBetween(322, 326);
            }
        }

        private int getFloorId() {
            return getRandomBetween(122, 125);
        }

        private int getRandomBetween(int low, int high) {
            return rand.nextInt(high - low) + low;
        }

        @Override
        public String toString() {

            StringBuilder floor = new StringBuilder();
            StringBuilder doors = new StringBuilder();
            StringBuilder props = new StringBuilder();
            StringBuilder walls = new StringBuilder();
            StringBuilder creature = new StringBuilder();

            for (int r = mapHeight - 1; r >= 0; r--) {
                for (int c = 0; c < mapWidth; c++) {
                    if (ids[r][c] == Type.WALL || ids[r][c] == Type.ROCK || ids[r][c] == Type.NORTH_WALL || ids[r][c] == Type.SOUTH_WALL) {
                        walls.append(getWallId(ids[r][c])).append(",");
                    } else {
                        walls.append("0").append(",");
                    }
                }
                walls.append("\n");
            }
            walls.deleteCharAt(walls.length() - 2);

            for (int r = mapHeight - 1; r >= 0; r--) {
                for (int c = 0; c < mapWidth; c++) {
                    if (ids[r][c] == Type.DOOR || ids[r][c] == Type.HIDDEN_NORTH
                            || ids[r][c] == Type.HIDDEN_SOUTH || ids[r][c] == Type.HIDDEN_EAST || ids[r][c] == Type.HIDDEN_WEST) {
                        doors.append(ids[r][c].id()).append(",");
                    } else {
                        doors.append("0").append(",");
                    }
                }
                doors.append("\n");
            }
            doors.deleteCharAt(doors.length() - 2);

            for (int r = mapHeight - 1; r >= 0; r--) {
                for (int c = 0; c < mapWidth; c++) {
                    if (ids[r][c] == Type.MESSAGE || ids[r][c] == Type.DARKNESS || ids[r][c] == Type.CHUTE || ids[r][c] == Type.ELEVATOR
                            || ids[r][c] == Type.STAIRS_UP || ids[r][c] == Type.STAIRS_DOWN
                            || ids[r][c] == Type.TELEPORTER || ids[r][c] == Type.SPINNER) {
                        props.append(ids[r][c].id()).append(",");
                    } else {
                        props.append("0").append(",");
                    }
                }
                props.append("\n");
            }
            props.deleteCharAt(props.length() - 2);

            for (int r = mapHeight - 1; r >= 0; r--) {
                for (int c = 0; c < mapWidth; c++) {
                    if (ids[r][c] != Type.WALL && ids[r][c] != Type.ROCK && ids[r][c] != Type.NORTH_WALL) {
                        floor.append(getFloorId()).append(",");
                    } else {
                        floor.append("0").append(",");
                    }
                }
                floor.append("\n");
            }
            floor.deleteCharAt(floor.length() - 2);

            for (int r = mapHeight - 1; r >= 0; r--) {
                for (int c = 0; c < mapWidth; c++) {
                    if (ids[r][c] == Type.GUARDIAN || ids[r][c] == Type.MONSTER) {
                        creature.append(creatureIcons[r][c]).append(",");
                    } else {
                        creature.append("0").append(",");
                    }
                }
                creature.append("\n");
            }
            creature.deleteCharAt(creature.length() - 2);

            StringBuilder sb = new StringBuilder();
            for (int r = mapHeight - 1; r >= 0; r--) {
                for (int c = 0; c < mapWidth; c++) {
                    sb.append("0,");
                }
                sb.append("\n");
            }
            sb.deleteCharAt(sb.length() - 2);

            String template = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
                    + "<map version=\"1.0\" orientation=\"orthogonal\" renderorder=\"right-down\" width=\"" + this.mapWidth + "\" height=\"" + this.mapHeight + "\" tilewidth=\"48\" tileheight=\"48\" nextobjectid=\"1\">\n"
                    + " <properties>\n"
                    + "  <property name=\"startX\" value=\"1\"/>\n"
                    + "  <property name=\"startY\" value=\"58\"/>\n"
                    + " </properties>"
                    + " <tileset firstgid=\"1\" name=\"terrain\" tilewidth=\"48\" tileheight=\"48\" tilecount=\"760\" columns=\"20\">\n"
                    + "  <image source=\"uf_terrain.png\" width=\"960\" height=\"1824\"/>\n"
                    + "  <tile id=\"115\">\n"
                    + "   <animation>\n"
                    + "    <frame tileid=\"115\" duration=\"500\"/>\n"
                    + "    <frame tileid=\"116\" duration=\"500\"/>\n"
                    + "    <frame tileid=\"117\" duration=\"500\"/>\n"
                    + "    <frame tileid=\"118\" duration=\"500\"/>\n"
                    + "   </animation>\n"
                    + "  </tile>\n"
                    + "  <tile id=\"135\">\n"
                    + "   <animation>\n"
                    + "    <frame tileid=\"135\" duration=\"500\"/>\n"
                    + "    <frame tileid=\"136\" duration=\"500\"/>\n"
                    + "    <frame tileid=\"137\" duration=\"500\"/>\n"
                    + "    <frame tileid=\"138\" duration=\"500\"/>\n"
                    + "   </animation>\n"
                    + "  </tile>\n"
                    + "  <tile id=\"155\">\n"
                    + "   <animation>\n"
                    + "    <frame tileid=\"155\" duration=\"500\"/>\n"
                    + "    <frame tileid=\"156\" duration=\"500\"/>\n"
                    + "    <frame tileid=\"157\" duration=\"500\"/>\n"
                    + "    <frame tileid=\"158\" duration=\"500\"/>\n"
                    + "   </animation>\n"
                    + "  </tile>\n"
                    + "  <tile id=\"175\">\n"
                    + "   <animation>\n"
                    + "    <frame tileid=\"175\" duration=\"500\"/>\n"
                    + "    <frame tileid=\"176\" duration=\"500\"/>\n"
                    + "    <frame tileid=\"177\" duration=\"500\"/>\n"
                    + "    <frame tileid=\"178\" duration=\"500\"/>\n"
                    + "   </animation>\n"
                    + "  </tile>\n"
                    + "  <tile id=\"195\">\n"
                    + "   <animation>\n"
                    + "    <frame tileid=\"195\" duration=\"300\"/>\n"
                    + "    <frame tileid=\"196\" duration=\"300\"/>\n"
                    + "    <frame tileid=\"197\" duration=\"300\"/>\n"
                    + "    <frame tileid=\"198\" duration=\"300\"/>\n"
                    + "   </animation>\n"
                    + "  </tile>\n"
                    + "  <tile id=\"215\">\n"
                    + "   <animation>\n"
                    + "    <frame tileid=\"215\" duration=\"500\"/>\n"
                    + "    <frame tileid=\"216\" duration=\"500\"/>\n"
                    + "    <frame tileid=\"217\" duration=\"500\"/>\n"
                    + "    <frame tileid=\"218\" duration=\"500\"/>\n"
                    + "   </animation>\n"
                    + "  </tile>\n"
                    + "  <tile id=\"644\">\n"
                    + "   <animation>\n"
                    + "    <frame tileid=\"644\" duration=\"200\"/>\n"
                    + "    <frame tileid=\"645\" duration=\"200\"/>\n"
                    + "   </animation>\n"
                    + "  </tile>\n"
                    + "  <tile id=\"664\">\n"
                    + "   <animation>\n"
                    + "    <frame tileid=\"664\" duration=\"200\"/>\n"
                    + "    <frame tileid=\"665\" duration=\"200\"/>\n"
                    + "   </animation>\n"
                    + "  </tile>\n"
                    + "  <tile id=\"672\">\n"
                    + "   <animation>\n"
                    + "    <frame tileid=\"672\" duration=\"750\"/>\n"
                    + "    <frame tileid=\"673\" duration=\"750\"/>\n"
                    + "   </animation>\n"
                    + "  </tile>\n"
                    + "  <tile id=\"674\">\n"
                    + "   <animation>\n"
                    + "    <frame tileid=\"674\" duration=\"750\"/>\n"
                    + "    <frame tileid=\"675\" duration=\"750\"/>\n"
                    + "   </animation>\n"
                    + "  </tile>\n"
                    + " </tileset>\n"
                    + " <tileset firstgid=\"761\" name=\"heroes\" tilewidth=\"48\" tileheight=\"48\" tilecount=\"520\" columns=\"40\">\n"
                    + "  <image source=\"uf_heroes.png\" width=\"1920\" height=\"624\"/>\n"
                    + " </tileset>"
                    + "<layer name=\"floor\" width=\"" + this.mapWidth + "\" height=\"" + this.mapHeight + "\">\n"
                    + "  <data encoding=\"csv\">\n"
                    + "   %s\n"
                    + "  </data>\n"
                    + " </layer>\n"
                    + " <layer name=\"floor 2\" width=\"" + this.mapWidth + "\" height=\"" + this.mapHeight + "\">\n"
                    + "  <data encoding=\"csv\">\n"
                    + "   " + sb.toString()
                    + "  </data>\n"
                    + " </layer>\n"
                    + " <layer name=\"props\" width=\"" + this.mapWidth + "\" height=\"" + this.mapHeight + "\">\n"
                    + "  <data encoding=\"csv\">\n"
                    + "   %s\n"
                    + "  </data>\n"
                    + " </layer>\n"
                    + " <layer name=\"creature\" width=\"" + this.mapWidth + "\" height=\"" + this.mapHeight + "\">\n"
                    + "  <data encoding=\"csv\">\n"
                    + "   %s\n"
                    + "  </data>\n"
                    + " </layer>\n"
                    + " <layer name=\"water_edges\" width=\"" + this.mapWidth + "\" height=\"" + this.mapHeight + "\">\n"
                    + "  <data encoding=\"csv\">\n"
                    + "   " + sb.toString()
                    + "  </data>\n"
                    + " </layer>\n"
                    + " <layer name=\"shadows\" width=\"" + this.mapWidth + "\" height=\"" + this.mapHeight + "\">\n"
                    + "  <data encoding=\"csv\">\n"
                    + "   " + sb.toString()
                    + "  </data>\n"
                    + " </layer>\n"
                    + " <layer name=\"walls\" width=\"" + this.mapWidth + "\" height=\"" + this.mapHeight + "\">\n"
                    + "  <data encoding=\"csv\">\n"
                    + "   %s\n"
                    + "  </data>\n"
                    + " </layer>\n"
                    + " <layer name=\"door\" width=\"" + this.mapWidth + "\" height=\"" + this.mapHeight + "\">\n"
                    + "  <data encoding=\"csv\">\n"
                    + "   %s\n"
                    + "  </data>\n"
                    + " </layer>\n"
                    + " <layer name=\"torches\" width=\"" + this.mapWidth + "\" height=\"" + this.mapHeight + "\">\n"
                    + "  <data encoding=\"csv\">\n"
                    + "   " + sb.toString()
                    + "  </data>\n"
                    + " </layer>\n"
                    + " <layer name=\"webs\" width=\"" + this.mapWidth + "\" height=\"" + this.mapHeight + "\">\n"
                    + "  <data encoding=\"csv\">\n"
                    + "   " + sb.toString()
                    + "  </data>\n"
                    + " </layer>\n"
                    + " <objectgroup name=\"messages\">\n"
                    + "   %s\n"
                    + " </objectgroup>"
                    + " <objectgroup name=\"people\">\n"
                    + "   %s\n"
                    + " </objectgroup>"
                    + " <objectgroup name=\"portals\">\n"
                    + "   %s\n"
                    + " </objectgroup>"
                    + " <objectgroup name=\"rooms\">\n"
                    + "  <object id=\"1\" x=\"1584\" y=\"1824\">\n"
                    + "   <polygon points=\"0,0 0,240 336,240 336,0 240,0 240,-48 96,-48 96,0\"/>\n"
                    + "  </object>"
                    + " </objectgroup>"
                    + "</map>\n";

            return String.format(template, floor, props, creature, walls, doors, messageProps, monsters, portals);

        }
    }

}
